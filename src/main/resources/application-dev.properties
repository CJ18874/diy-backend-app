#==========================
#	DATASOURCE
#==========================
spring.datasource.platform=postgres
spring.datasource.url=jdbc:postgresql://localhost:5432/DMG
spring.datasource.username=postgres
spring.datasource.password=admin
#==========================
#	JPA  & HIBERNATE
#==========================
spring.jpa.database=POSTGRESQL
spring.jpa.show-sql=true
#spring.jpa.generate-ddl (boolean) switches the feature on and off and is vendor independent.
spring.jpa.generate-ddl=true

#spring.jpa.hibernate.ddl-auto (enum) is a Hibernate feature that controls the behavior in a more fine-grained way. 
#This feature is described in more detail later in this guide.
#1)create-drop
#2)none - this value effectively turns off the DDL generation
#3)validate - Hibernate only validates whether the tables and columns exist, otherwise it throws an exception.
#4)update - the object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema according to the diff. It never deletes the existing tables or columns even if they are no more required by the application
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

server.port=8082